<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <PathGeometry x:Key="TreeArrow"
                  Figures="M0,0 L0,6 L6,0 z" />

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                                   StrokeThickness="5"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   Opacity="0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Width"
                Value="16" />
        <Setter Property="Height"
                Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent"
                          Height="16"
                          Width="16">
                        <Path x:Name="ExpandPath"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{StaticResource TreeArrow}"
                              Fill="Transparent"
                              Stroke="{DynamicResource BlackBrush}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135"
                                                 CenterY="3"
                                                 CenterX="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="RenderTransform"
                                    TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180"
                                                     CenterY="3"
                                                     CenterX="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource GrayBrush1}" />
                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource BlackBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource GrayBrush5}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource GrayBrush5}" />
                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource GrayBrush5}" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Stroke"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Fill"
                                    TargetName="ExpandPath"
                                    Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TreeViewItemTemplate" TargetType="{x:Type TreeViewItem}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="19" Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" ClickMode="Press"
                                  Style="{StaticResource ExpandCollapseToggleStyle}"
                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">

            </ToggleButton>
            <Border x:Name="Bd" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" 
                    Grid.Column="1" Padding="{TemplateBinding Padding}" 
                    SnapsToDevicePixels="True">
                <ContentPresenter x:Name="PART_Header" 
                                  ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                  Content="{TemplateBinding Header}"
                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                  ContentSource="Header" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded"
                                 Value="False">
                <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
            </Trigger>

            <Trigger Property="HasItems"
                                 Value="False">
                <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden" />
            </Trigger>

            <Trigger SourceName="Bd"
                                 Property="IsMouseOver"
                                 Value="True">
                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />
                <Setter Property="Foreground"
                                    Value="{DynamicResource BlackColorBrush}" />
            </Trigger>
            <Trigger Property="IsSelected"
                                 Value="True">
                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                                 Value="False">
                <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled"
                                           Value="False" />
                    <Condition Property="IsSelected"
                                           Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource GrayBrush7}" />
                    <Setter Property="Foreground"
                                        Value="{DynamicResource AccentSelectedColorBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected"
                                           Value="True" />
                    <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MetroTreeViewItem"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template" Value="{StaticResource TreeViewItemTemplate}"/>
        </Style>
            
    <Style x:Key="MetroTreeView"
           TargetType="{x:Type TreeView}">
        <Setter Property="BorderBrush"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource WhiteBrush}" />
        <!-- default to 0 -->
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource GrayBrush9}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="ItemContainerStyle" Value="{StaticResource MetroTreeViewItem}" />-->
    </Style>

    <Style TargetType="{x:Type TreeView}"
           BasedOn="{StaticResource MetroTreeView}" />
    <Style TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource MetroTreeViewItem}" />

</ResourceDictionary>